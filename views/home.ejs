<%- include('partials/header',{val:{title:'Dashboard',page:'dashboard'}}) -%>

<div class="ml-257 mt-72">
    <div class="page-head">
        <h1><i class="fa-solid fa-store"></i> Dashboard</h1>
    </div>
    
<div>
<div class="static-cards">
    <div class="out-of-stock">
        <h3>Out of Stock</h3>
        <div class="div-icon div-danger">
            <i class="fa-solid fa-circle-exclamation"></i>
        </div>
        
        <h2 id="out-of-stock">0</h2>
    </div>
    <div class="low-on-stock">
        <h3>Low on Stock</h3>
        <div class="div-icon div-danger">
            <i class="fa-solid fa-triangle-exclamation"></i>
        </div>
       
        <h2 id="low-on-stock">0</h2>
    </div>
    <div class="today-sell-amount">
        <h3>Today's Sale Amount</h3>
        <div class="div-icon div-safe">
            <i class="fa-brands fa-sellsy"></i>
        </div>
        
        <h2 id="today-sell-amount">â‚¹0</h2>
    </div>
</div>

<div class="static-charts">
    <div class="my-static-chart">
        <canvas id="myChart1"></canvas>
    </div>
    <div class="my-static-chart">
        <canvas id="myChart2"></canvas>
    </div>
</div>
</div>    

  
</div>
<link rel="stylesheet" href="/home/home.css">
<script>
    // const ctx = document.getElementById('myChart').getContext('2d');
    const lowStock=document.getElementById('low-on-stock');
    const outStock=document.getElementById('out-of-stock');
    const todaySell=document.getElementById('today-sell-amount');
    let totalProduct;
    let outOfStock;
    let lowOnStock;

    const fetchLowStock=async()=>{
        const response=await fetch('/getLowStockCount');
        const json=await response.json();
        console.log("low stock");
        console.log(json);
        lowStock.innerText=(json.count)?json.count:0;
        lowOnStock=(json.count)?json.count:0;
        fetchOutStock();
    }
    const fetchOutStock=async()=>{
        const response=await fetch('/getOutOfStock');
        const json=await response.json();
        console.log("out of stock");
        console.log(json)
        outStock.innerText=(json.count)?json.count:0;
        outOfStock=(json.count)?json.count:0;
        fetchTodaySell();
    }
    const fetchTodaySell=async()=>{
        const response=await fetch('/getTodaysSales');
        const json=await response.json();
        console.log("today sell");
        const amount=json[0].totalBillAmount;
        todaySell.innerText=(amount)?amount:0;
        fetchProductCount();
    }
    const fetchProductCount=async()=>{
        const response=await fetch('/getProductsCount');
        const json=await response.json();
        console.log("product count");
        console.log(json.length);
        makePieChart(json.length);
    }
    fetchLowStock();
    
    
   


const makePieChart=(len)=>{
    
const data = {
  labels: [
    'out of stock',
    'low on stock',
    'total product'
  ],
  datasets: [{
    label: 'Inventory',
    data: [outOfStock, lowOnStock, len],
    backgroundColor: [
      'red',
      'yellow',
      'green',
     
    ],
    borderColor: [
      'rgb(255, 99, 132)',
      'rgb(255, 159, 64)',
      'rgb(255, 205, 86)',
      
    ],
    borderWidth: 1
  }]
};


const config = {
  type: 'bar',
  data: data,
  options: {
    scales: {
      y: {
        beginAtZero: true
      }
    }
  },
};
  const myChart = new Chart(
    document.getElementById('myChart1'),
    config
  );
}

//   const myChartq = new Chart(
//     document.getElementById('myChart2'),
//     config
//   );


//     const myChart = new Chart(ctx, {
//     type: 'bar',
//     data: {
//         labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
//         datasets: [{
//             label: '# of Votes',
//             data: [12, 19, 3, 5, 2, 3],
//             backgroundColor: [
//                 'rgba(255, 99, 132, 0.2)',
//                 'rgba(54, 162, 235, 0.2)',
//                 'rgba(255, 206, 86, 0.2)',
//                 'rgba(75, 192, 192, 0.2)',
//                 'rgba(153, 102, 255, 0.2)',
//                 'rgba(255, 159, 64, 0.2)'
//             ],
//             borderColor: [
//                 'rgba(255, 99, 132, 1)',
//                 'rgba(54, 162, 235, 1)',
//                 'rgba(255, 206, 86, 1)',
//                 'rgba(75, 192, 192, 1)',
//                 'rgba(153, 102, 255, 1)',
//                 'rgba(255, 159, 64, 1)'
//             ],
//             borderWidth: 1
//         }]
//     },
//     options: {
//         scales: {
//             y: {
//                 beginAtZero: true
//             }
//         }
//     }
// });
</script>
</body> 
</html>
